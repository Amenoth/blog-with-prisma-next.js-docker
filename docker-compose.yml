version: "3.8"

services:
  postgresql:
    container_name: postgresql
    image: postgres:12.4
    restart: always
    environment:
      POSTGRES_DB: prisma
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: prismapass
    ports:
      - "5432:5432"
    volumes:
      - postgresql:/var/lib/postgresql
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.27
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "postgresql:pgsql-server"
  prisma:
    links:
      - postgresql
    depends_on:
      - postgresql
    container_name: prisma
    image: prisma_studio
    ports:
      - "5555:5555"
    build:
      context: backend/prisma
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${POSTGRESQL_URL}
    volumes:
      - /app/prisma
  backend:
    links:
      - postgresql
    depends_on:
      - postgresql
    container_name: backend
    image: prisma.io
    ports:
      - "4000:4000"
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      POSTGRESQL_URL: ${POSTGRESQL_URL}
      DATABASE_URL: ${POSTGRESQL_URL}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
      - /usr/src/app/backend/prisma
  frontend:
    container_name: frontend
    image: nextjs
    ports:
      - "3000:3000"
    build:
      context: frontend
      dockerfile: Dockerfile
    environment: 
      BACKEND_URL: ${BACKEND_URL}
    volumes:
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules
      - /usr/src/app/frontend/.next

volumes: #define our postgresql volume used above
  postgresql:
  pgadmin-data:
